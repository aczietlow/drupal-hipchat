<?php
// $Id$

/**
 * @file
 * Enables various Drupal developer friendly actions.
 */

/**
 * Implementation of hook_help().
 */
function bot_drupal_help($section) {
  switch ($section) {
    case '':
      return '';
  }
}

/**
 * Implementation of hook_menu().
 */
function bot_drupal_menu($may_cache) {
  $items = array();

  if ($may_cache) {

  }

  return $items;
}

/**
 * Listen for Drupal URLs or a node ID and respond with the title.
 *
 * Relevant commands:
 *   <Morbus> #1234
 *   <Morbus> 4321
 *   <Morbus> http://drupal.org/node/56213
 *   <Morbus> http://drupal.org/node/51234 or http://groups.drupal.org/node/123
 */
function bot_drupal_irc_msg_channel($data) {
  $message = $data->message; // message possibly modified below.

  // this is a *.drupal.org URL or what appears to be a recent nid.
  if (preg_match_all('/(http:\/\/.*?drupal.org\/node\/\d+)/', $data->message, $url_matches) ||
      preg_match('/^#?(\d{4,})$/', $data->message, $url_matches)) { // #12345 or 12345+.

    // any numbers we fake into a URL for the match looping.
    if (!is_array($url_matches[1]) && is_numeric($url_matches[1])) {
      $url_matches[1] = array('http://drupal.org/node/'.$url_matches[1]);
    }

    // retrieve each URL.
    foreach ($url_matches[1] as $url) {
      $result = drupal_http_request($url);
      preg_match('/<title>(.*?)\| (groups.)?drupal.org<\/title>/', $result->data, $title_matches);
      bot_message($data->channel, "$url => ".decode_entities($title_matches[1]));
    }
  }
}
